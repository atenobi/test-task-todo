{"version":3,"sources":["components/ToDoCounter/ToDoCounter.jsx","components/ToDoMainMenu/ToDoMainMenu.jsx","components/UpdateMenu/UpdateMenu.jsx","components/ToDoItem/ToDoItem.jsx","components/ToDoFooter/ToDoFooter.jsx","App.jsx","index.jsx"],"names":["ToDoCounter","toDoCount","className","ToDoMainMenu","addToDoToArray","useState","userString","setUserString","submitHandler","e","preventDefault","action","onSubmit","onKeyDown","key","value","aria-multiline","placeholder","onInput","currentTarget","type","UpdateMenu","updateHandler","update","ToDoItem","item","removeItem","updateItem","id","setUpdate","split","map","el","match","Math","random","onClick","ToDoFooter","infoArray","infoStatus","setInfoStatus","showInfo","length","index","App","toDoArr","setToDoArr","toDo","newValue","updatedEl","find","change","filter","userInput","newItem","toString","substr","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcf711db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// styles\r\nimport './index.scss';\r\n\r\nconst ToDoCounter = ({ toDoCount }) => (\r\n\t\t<div className='counter_container'>\r\n\t\t\t<h1 className='counter_text'>\r\n\t\t\t\tYou have {toDoCount} cases!\r\n\t\t\t</h1>\r\n\t\t</div>\r\n)\r\n\r\nToDoCounter.propTypes = {\r\n\ttoDoCount: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ToDoCounter;\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n// style\r\nimport  './index.scss'\r\n\r\nconst ToDoMainMenu = ({ addToDoToArray }) => {\r\n\tconst [userString, setUserString] = useState('');\r\n\r\n\tconst inputHandler = e => setUserString(e.currentTarget.value);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\taddToDoToArray(userString);\r\n\t\tsetUserString('');\r\n\t};\r\n\r\n\tconst enterKeyHandler = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tsubmitHandler(e);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"main_menu\">\r\n\t\t\t\t<form\r\n\t\t\t\t\taction={\"create_to_do\"}\r\n\t\t\t\t\tclassName='main_menu_form'\r\n\t\t\t\t\tonSubmit={submitHandler}\r\n\t\t\t\t\tonKeyDown={enterKeyHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='main_menu_input'\r\n\t\t\t\t\t\tvalue={userString}\r\n\t\t\t\t\t\taria-multiline={true}\r\n\t\t\t\t\t\tplaceholder='Write task here'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='main_menu_button'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nToDoMainMenu.propTypes = {\r\n\taddToDoToArray: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ToDoMainMenu;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n// style\r\nimport  './index.scss'\r\n\r\nconst UpdateMenu = ({ updateHandler, update }) => {\r\n\tlet [userString, setUserString] = useState(update);\r\n\r\n\tconst inputHandler = e => setUserString(e.currentTarget.value);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tupdateHandler(userString);\r\n\t};\r\n\r\n\tconst enterKeyHandler = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tsubmitHandler(e);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"update_menu\">\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName='update_menu_form'\r\n\t\t\t\t\taction={\"update_to_do\"}\r\n\t\t\t\t\tonSubmit={submitHandler}\r\n\t\t\t\t\tonKeyDown={enterKeyHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='update_menu_input'\r\n\t\t\t\t\t\tvalue={ userString }\r\n\t\t\t\t\t\t// aria-multiline={true}\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='update_menu_button'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-save\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nUpdateMenu.propTypes = {\r\n\tupdateHandler: PropTypes.func.isRequired,\r\n\tupdate: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default UpdateMenu;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// components\r\nimport UpdateMenu from \"../UpdateMenu/UpdateMenu\";\r\n\r\n// styles\r\nimport './index..scss'\r\n\r\nconst ToDoItem = ({ item, removeItem, updateItem }) => {\r\n\t const [update, setUpdate] = useState({\r\n\t\t id: null,\r\n\t\t value: '',\r\n\t })\r\n\r\n\tconst updateHandler = (value) => {\r\n\t\tupdateItem(update, value);\r\n\r\n\t\tsetUpdate({\r\n\t\t\tid: null,\r\n\t\t\tvalue: '',\r\n\t\t})\r\n\t}\r\n\r\n\tif (update.id) {\r\n\t\treturn (\r\n\t\t\t<UpdateMenu updateHandler={updateHandler} update={update.value} />\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='item_container'>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tclassName='item_text'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.value.split(' ').map(el =>\r\n\t\t\t\t\t\t\t\tel.match(/#[a-z,A-Z,А-Я,а-я]+/gmu) ?\r\n\t\t\t\t\t\t\t\t\t<span className='hash' key={item.id + Math.random()}>{el}</span> :\r\n\t\t\t\t\t\t\t\t\t<span className='usual-text' key={item.id + Math.random()}>{el}</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className='item_button_container'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='item_update_button'\r\n\t\t\t\t\t\t\tonClick={() => setUpdate({ id: item.id, value: item.value })}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&#9998;\r\n\t\t\t\t\t\t\t{/*<i className='fas fa-pencil-alt'/>*/}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='item_delete_button'\r\n\t\t\t\t\t\t\tonClick={() => removeItem(item.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&#9851;\r\n\t\t\t\t\t\t\t{/*<i className='fas fa-trash-alt' />*/}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nToDoItem.propTypes = {\r\n\titem: PropTypes.object.isRequired,\r\n\tremoveItem: PropTypes.func.isRequired,\r\n\tupdateItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// style\r\nimport './index.scss';\r\n\r\nconst ToDoFooter = ({infoArray}) => {\r\n\tconst [infoStatus, setInfoStatus] = useState(false);\r\n\r\n\tconst showInfo = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetInfoStatus(!infoStatus);\r\n\t}\r\n\r\n\tif (infoStatus) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className='footer_info_container'>\r\n\t\t\t\t\t{infoArray.length > 0 && infoArray.map((el, index) => (\r\n\t\t\t\t\t\t\t<p key={index} className='footer_info_text'>{el}</p>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='footer_button'\r\n\t\t\t\t\t\tonClick={(e) => showInfo(e)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#10006;\r\n\t\t\t\t\t\t{/*hide*/}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName='footer_container'\r\n\t\t\t>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='footer_button'\r\n\t\t\t\t\tonClick={(e) => showInfo(e)}\r\n\t\t\t\t>\r\n\t\t\t\t\t&#8505;\r\n\t\t\t\t\t{/*<i className=\"fa fa-info\"/>*/}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nToDoFooter.propTypes = {\r\n\tinfoArray: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default ToDoFooter;\r\n","import React, { useState }  from \"react\";\r\nimport './index.css';\r\n\r\n// components\r\nimport ToDoCounter from \"./components/ToDoCounter/ToDoCounter\";\r\nimport ToDoMainMenu from \"./components/ToDoMainMenu/ToDoMainMenu\";\r\nimport ToDoItem from \"./components/ToDoItem/ToDoItem\";\r\nimport ToDoFooter from \"./components/ToDoFooter/ToDoFooter\";\r\n\r\nfunction App() {\r\n  const [toDoArr, setToDoArr] = useState([]);\r\n\r\n  const infoArray = [\r\n    'Блокнот (To-Do list).',\r\n    'Небольшой тестовый проект на React JS.',\r\n    'Дизайн разрабатываю сам.',\r\n    'Стремился к простому, интуитивно понятному интерфейсу',\r\n    '(как мне кажется - получилось весело).',\r\n    'Приложение адаптируется под мобильные устройства.',\r\n    'Удобно добавлять, редактировать, удалять заметки.',\r\n    'https://atenobi.github.io/test-task-todo/',\r\n  ];\r\n\r\n  const addToDoToArray = (userInput) => {\r\n    if (userInput) {\r\n      const newItem = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        value: userInput,\r\n        change: function (value) {\r\n          this.value = value;\r\n        }\r\n      }\r\n      setToDoArr([...toDoArr, newItem]);\r\n    }\r\n  };\r\n\r\n  const updateItem = (toDo, newValue) => {\r\n    const updatedEl = toDoArr.find(el => el.id === toDo.id)\r\n    updatedEl.change(newValue);\r\n    return updatedEl;\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    setToDoArr([...toDoArr.filter((el) => el.id !== id)]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoCounter toDoCount={toDoArr.length} />\r\n      <ToDoMainMenu addToDoToArray={addToDoToArray} />\r\n      {toDoArr.length > 0 && toDoArr.map((el) => (\r\n          <ToDoItem\r\n            key={el.id}\r\n            item={el}\r\n            removeItem={removeItem}\r\n            updateItem={updateItem}\r\n          />\r\n        ))\r\n      }\r\n      <ToDoFooter infoArray={infoArray} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}