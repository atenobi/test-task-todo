{"version":3,"sources":["components/ToDoCounter/ToDoCounter.jsx","components/ToDoMainMenu/ToDoMainMenu.jsx","components/ToDoSearchMenu/ToDoSearchMenu.jsx","components/UpdateMenu/UpdateMenu.jsx","components/ToDoItem/ToDoItem.jsx","constants/infoArray.js","components/ToDoFooter/ToDoFooter.jsx","App.jsx","index.jsx"],"names":["ToDoCounter","toDoCount","className","ToDoMainMenu","addToDoToArray","useState","userString","setUserString","submitHandler","e","preventDefault","action","onSubmit","onKeyDown","key","value","aria-multiline","placeholder","onInput","currentTarget","type","ToDoSearchMenu","toDoArr","setFindedItems","useEffect","length","filter","el","includes","UpdateMenu","updateHandler","update","ToDoItem","item","removeItem","updateItem","id","setUpdate","split","map","match","Math","random","onClick","infoArray","ToDoFooter","infoStatus","setInfoStatus","showInfo","index","App","setToDoArr","findedItems","toDo","newValue","updatedEl","find","change","userInput","newItem","toString","substr","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21f1fdf2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// styles\r\nimport './index.scss';\r\n\r\nconst ToDoCounter = ({ toDoCount }) => (\r\n\t\t<div className='counter_container'>\r\n\t\t\t<h1 className='counter_text'>\r\n\t\t\t\tYou have {toDoCount} cases!\r\n\t\t\t</h1>\r\n\t\t</div>\r\n)\r\n\r\nToDoCounter.propTypes = {\r\n\ttoDoCount: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ToDoCounter;\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n// style\r\nimport  './index.scss'\r\n\r\nconst ToDoMainMenu = ({ addToDoToArray }) => {\r\n\tconst [userString, setUserString] = useState('');\r\n\r\n\tconst inputHandler = e => setUserString(e.currentTarget.value);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\taddToDoToArray(userString);\r\n\t\tsetUserString('');\r\n\t};\r\n\r\n\tconst enterKeyHandler = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tsubmitHandler(e);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"main_menu\">\r\n\t\t\t\t<form\r\n\t\t\t\t\taction={\"create_to_do\"}\r\n\t\t\t\t\tclassName='main_menu_form'\r\n\t\t\t\t\tonSubmit={submitHandler}\r\n\t\t\t\t\tonKeyDown={enterKeyHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='main_menu_input'\r\n\t\t\t\t\t\tvalue={userString}\r\n\t\t\t\t\t\taria-multiline={true}\r\n\t\t\t\t\t\tplaceholder='Write task here'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='main_menu_button'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nToDoMainMenu.propTypes = {\r\n\taddToDoToArray: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ToDoMainMenu;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// style\r\nimport \"./index.scss\";\r\n\r\nconst ToDoSearchMenu = ({ toDoArr, setFindedItems }) => {\r\n\tconst [userString, setUserString] = useState('');\r\n\r\n\tconst inputHandler = e => setUserString(e.currentTarget.value);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userString && toDoArr.length > 0) {\r\n\t\t\tsetFindedItems([...toDoArr.filter((el) => el.value.includes(userString))]);\r\n\t\t} else {\r\n\t\t\tsetFindedItems([]);\r\n\t\t}\r\n\t}, [userString, toDoArr]);\r\n\r\n\t// default render searching menu\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"search_menu\">\r\n\t\t\t\t<form\r\n\t\t\t\t\taction={\"create_to_do\"}\r\n\t\t\t\t\tclassName='search_menu_form'\r\n\t\t\t\t>\r\n\t\t\t\t\t<h2 className='searching_result_text'>Looking for something?</h2>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='search_menu_input'\r\n\t\t\t\t\t\tvalue={userString}\r\n\t\t\t\t\t\taria-multiline={true}\r\n\t\t\t\t\t\tplaceholder='&#9906;'  // magnifying glass\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nToDoSearchMenu.propTypes = {\r\n\ttoDoArr: PropTypes.array.isRequired,\r\n\tsetFindedItems: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToDoSearchMenu;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n// style\r\nimport  './index.scss'\r\n\r\nconst UpdateMenu = ({ updateHandler, update }) => {\r\n\tlet [userString, setUserString] = useState(update);\r\n\r\n\tconst inputHandler = e => setUserString(e.currentTarget.value);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tupdateHandler(userString);\r\n\t};\r\n\r\n\tconst enterKeyHandler = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tsubmitHandler(e);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"update_menu\">\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName='update_menu_form'\r\n\t\t\t\t\taction={\"update_to_do\"}\r\n\t\t\t\t\tonSubmit={submitHandler}\r\n\t\t\t\t\tonKeyDown={enterKeyHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='update_menu_input'\r\n\t\t\t\t\t\tvalue={ userString }\r\n\t\t\t\t\t\t// aria-multiline={true}\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='update_menu_button'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#10004;\r\n\t\t\t\t\t\t{/*<i className=\"fa fa-save\" />*/}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nUpdateMenu.propTypes = {\r\n\tupdateHandler: PropTypes.func.isRequired,\r\n\tupdate: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default UpdateMenu;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// components\r\nimport UpdateMenu from \"../UpdateMenu/UpdateMenu\";\r\n\r\n// styles\r\nimport './index..scss'\r\n\r\nconst ToDoItem = ({ item, removeItem, updateItem }) => {\r\n\t const [update, setUpdate] = useState({\r\n\t\t id: null,\r\n\t\t value: '',\r\n\t })\r\n\r\n\tconst updateHandler = (value) => {\r\n\t\tupdateItem(update, value);\r\n\r\n\t\tsetUpdate({\r\n\t\t\tid: null,\r\n\t\t\tvalue: '',\r\n\t\t})\r\n\t}\r\n\r\n\tif (update.id) {\r\n\t\treturn (\r\n\t\t\t<UpdateMenu updateHandler={updateHandler} update={update.value} />\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='item_container'>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tclassName='item_text'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.value.split(' ').map(el =>\r\n\t\t\t\t\t\t\t\tel.match(/#[a-z,A-Z,А-Я,а-я]+/gmu) ?\r\n\t\t\t\t\t\t\t\t\t<span className='hash' key={item.id + Math.random()}>{el}</span> :\r\n\t\t\t\t\t\t\t\t\t<span className='usual-text' key={item.id + Math.random()}>{el}</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className='item_button_container'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='item_update_button'\r\n\t\t\t\t\t\t\tonClick={() => setUpdate({ id: item.id, value: item.value })}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&#9998;\r\n\t\t\t\t\t\t\t{/* pencil */}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='item_delete_button'\r\n\t\t\t\t\t\t\tonClick={() => removeItem(item.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&#9851;\r\n\t\t\t\t\t\t\t{/* trash */}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nToDoItem.propTypes = {\r\n\titem: PropTypes.object.isRequired,\r\n\tremoveItem: PropTypes.func.isRequired,\r\n\tupdateItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToDoItem;\r\n","export const infoArray = [\r\n\t'Блокнот (To-Do list).',\r\n\t'Небольшой тестовый проект на React JS.',\r\n\t'Дизайн разрабатываю сам.',\r\n\t'Стремился к простому, интуитивно понятному интерфейсу',\r\n\t'(как мне кажется - получилось весело).',\r\n\t'Приложение адаптируется под мобильные устройства.',\r\n\t'Удобно добавлять, редактировать, удалять заметки.',\r\n\t'Работает поиск конкретных заметок.',\r\n];\r\n","import React, {useState} from \"react\";\r\n\r\n// data\r\nimport { infoArray } from \"../../constants/infoArray\";\r\n\r\n// style\r\nimport './index.scss';\r\n\r\nconst ToDoFooter = () => {\r\n\tconst [infoStatus, setInfoStatus] = useState(false);\r\n\r\n\tconst showInfo = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetInfoStatus(!infoStatus);\r\n\t}\r\n\r\n\tif (infoStatus) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className='footer_info_container'>\r\n\t\t\t\t\t{infoArray.length > 0 && infoArray.map((el, index) => (\r\n\t\t\t\t\t\t\t<p key={index} className='footer_info_text'>{el}</p>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='footer_button'\r\n\t\t\t\t\t\tonClick={(e) => showInfo(e)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#10006;\r\n\t\t\t\t\t\t{/* close (cross) */}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName='footer_container'\r\n\t\t\t>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='footer_button'\r\n\t\t\t\t\tonClick={(e) => showInfo(e)}\r\n\t\t\t\t>\r\n\t\t\t\t\t&#8505;\r\n\t\t\t\t\t{/* info (i) */}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default ToDoFooter;\r\n","import React, { useState }  from \"react\";\r\n\r\n// components\r\nimport ToDoCounter from \"./components/ToDoCounter/ToDoCounter\";\r\nimport ToDoMainMenu from \"./components/ToDoMainMenu/ToDoMainMenu\";\r\nimport ToDoSearchMenu from \"./components/ToDoSearchMenu/ToDoSearchMenu\";\r\nimport ToDoItem from \"./components/ToDoItem/ToDoItem\";\r\nimport ToDoFooter from \"./components/ToDoFooter/ToDoFooter\";\r\n\r\n// style\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [toDoArr, setToDoArr] = useState([]);\r\n  const [findedItems, setFindedItems] = useState([]);\r\n\r\n  const addToDoToArray = (userInput) => {\r\n    if (userInput) {\r\n      const newItem = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        value: userInput,\r\n        change: function (value) {\r\n          this.value = value;\r\n        }\r\n      }\r\n      setToDoArr([...toDoArr, newItem]);\r\n    }\r\n  };\r\n\r\n  const updateItem = (toDo, newValue) => {\r\n    const updatedEl = toDoArr.find(el => el.id === toDo.id)\r\n    updatedEl.change(newValue);\r\n    setFindedItems([]);\r\n    return updatedEl;\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    setToDoArr([...toDoArr.filter((el) => el.id !== id)]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoCounter toDoCount={toDoArr.length} />\r\n      <ToDoMainMenu addToDoToArray={addToDoToArray} />\r\n      <ToDoSearchMenu\r\n        toDoArr={toDoArr}\r\n        setFindedItems={setFindedItems}\r\n      />\r\n\r\n      {findedItems.length > 0 && findedItems.map((el) => (\r\n        <div className=\"searching_result_container\">\r\n          <h4 className=\"searching_result_text\">Found</h4>\r\n          <ToDoItem\r\n            key={el.id}\r\n            item={el}\r\n            removeItem={removeItem}\r\n            updateItem={updateItem}\r\n          />\r\n        </div>\r\n      ))\r\n      }\r\n\r\n      {toDoArr.length > 0 && toDoArr.map((el) => (\r\n          <ToDoItem\r\n            key={el.id}\r\n            item={el}\r\n            removeItem={removeItem}\r\n            updateItem={updateItem}\r\n          />\r\n        ))\r\n      }\r\n      <ToDoFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}